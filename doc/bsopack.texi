\input texinfo @c -*-texinfo-*-
@c %**start of header
@setfilename bsopack.info
@settitle BSOpack Manual
@set VERSION 1.9
@setchapternewpage odd
@c %**end of header

@ifinfo
This file documents BSOpack @value{VERSION}.

@end ifinfo

@ifhtml
This file documents BSOpack @value{VERSION}.

@end ifhtml

@titlepage
@title BSOpack @value{VERSION} Manual
@author Dmitry Sergienko

@page
@vskip 0pt plus 1filll
Copyright @copyright{} 2000-2001 Dmitry Sergienko 

@end titlepage

@ifinfo

@dircategory Fidonet Software
@direntry
* BSOpack: (bsopack).	Binkley-Style outbound netmail packer.
@end direntry

@node Top, , , (dir)
@top bsopack

This document applies to version @value{VERSION} of BSOpack.

@end ifinfo

@ifhtml

@dircategory Fidonet Software
@direntry
* BSOpack: (bsopack).	Binkley-Style outbound netmail packer.
@end direntry

@node Top, , , (dir)
@top bsopack

This document applies to version @value{VERSION} of BSOpack.

@end ifhtml

@menu
* Introduction::
* FidoConfig::
* Command line switches::
* How this program works::
@end menu

@node Introduction, FidoConfig, Top, Top
@chapter Introducing BSOpack
BSOpack is used to pack outgoing netmail for links. It is a part of
@emph{HUSKY} project and requires its files.
You should use @code{fidoconfig 1.9} or more recent. If you don't have these
packages, download them from @url{https://github.com/huskyproject/fidoconfig}


@node FidoConfig, Command line switches, Introduction, Top
@chapter FidoConfig keywords and configuration

@menu
* packNetmail::
* maxUnpackedNetmail::
* sample::
@end menu

@node packNetmail, maxUnpackedNetmail, FidoConfig, FidoConfig
@section packNetmail
@table @asis
@item Syntax:
@code{packNetmail <bool>}
@item Example:
@code{packNetmail on}
@item Default: 
@code{packNetmail off}
@end table

      Determines if you want to pack outgoing netmail for this link.
Used in link definition only.

Attention: If you use @code{packNetmail on} - you must define a packer for this
link.

This statement can be repeated for different links only.


@node maxUnpackedNetmail, sample, packNetmail, FidoConfig
@section maxUnpackedNetmail
@table @asis
@item Syntax:
@code{maxUnpackedNetmail <integer>}
@item Example:
@code{maxUnpackedNetmail 0}
@item Default:
@code{maxUnpackedNetmail 20}
@end table

      Determines how much unpacked netmail in kilobytes we should leave for
this link. If we have more outgoing netmail - it will be packed into bundles.
You also can have packed & unpacked netmail in your outbound
simultaneously - a packet, which have size more than @code{maxUnpackedNetmail}
is packed into a bundle, and a new packet with size less than
@code{maxUnpackedNetmail} is created.
If you select 0 kb - all netmail will be packed.

@node sample, , maxUnpackedNetmail, FidoConfig
@section Sample link definition

@example
Link            Dmitry Sergienko
AKA             2:464/910
ourAka          2:464/910.1
Password        xxxxxxxx
autoAreaCreate  on
autoFileCreate  on
forwardRequests on
AutoAreaCreateDefaults -p 14 -dupeCheck move -dupeHistory 11
Packer          zip
allowEmptyPktPwd on
packNetmail on
maxUnpackedNetmail 0
@end example

@node Command line switches, How this program works, FidoConfig, Top
@chapter Command line switches
@table @asis
@item Usage:
@code{bsopack [-c fidconfig] [options]}
@item Options:
@code{-q}  Quiet mode (ignoring screenLogLevels from fidoconfig)
@*
@code{-h}  Help screen
@*
@code{--help} The same as @code{-h}
@item Example:
@code{bsopack -qc /etc/fido/config}
@item If -c command line option is defined, then its value determines the fidoconfig
location. If -c command line option is not defined but FIDOCONFIG environment
variable is defined, then the environment variable determines the fidoconfig
location. If neither -c command line option, nor FIDOCONFIG environment variable
are defined, then the settings CFGDIR and CFGNAME defined in huskymak.cfg
determine the fidoconfig location during compilation. If CFGNAME is not defined
there, 'config' is used as CFGNAME.
@end table

@node How this program works, , Command line switches, Top
@chapter How this program works

At first, it checks if @code{packNetmail} for link is on, this link is not busy,
and a packer is defined. Then it searches for *.?ut files in the outbound. If
the size of all found *.?ut is greater than maxUnpackedNetmail, these files
will be renamed to *.pkt (using @code{tempOutbound} token) and put into an
arcmail bundle. Thus, your mail should never be lost. If any error occurs, hpt
scan will find this packet and (if this packet is for a link listed in
fidoconfig) pack it into a bundle with echomail. The packet will be added to
the most recently used bundle until the size of the bundle is more than
@code{arcmailSize} for the link.
If you select @code{bundleNameStyle addrDiff}, your netmail will be
packed together with echomail. Each flavour is processed independently.
It creates bundle names using an algorithm of two addresses differences.
The log file @code{bsopack.log} is located in @code{logFileDir} directory.

@table @asis
@item Thanx to Kees Bergwerf <c.bergwerf@@hccnet.nl> for OS/2 porting.
@item Thanx to Oleg W Levchenko (2:6035/6) for testing.
@item Thanx to Max Chernogor (2:464/108) for MSVC compiler support.
@end table

@bye
